{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Users/JEMIMAFONSECAPASSOS/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\JEMIMAFONSECAPASSOS\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport Cookies from \"js-cookie\";\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState(rest.level),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(rest.currentExperience),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(rest.challengesCompleted),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(false),\n      isLevelUpModalOpen = _useState4[0],\n      setIsLevelUpModalOpen = _useState4[1];\n\n  var _useState5 = useState(null),\n      activeChallenge = _useState5[0],\n      setActiveChallenge = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ðŸŽ‰', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) return;\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      activeChallenge: activeChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge,\n      closeLevelUpModal: closeLevelUpModal\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"QoFYuJsjBEdvcvysUERUPu30c3Q=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/JEMIMAFONSECAPASSOS/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","isLevelUpModalOpen","setIsLevelUpModalOpen","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","closeLevelUpModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react'\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport challenges from '../../challenges.json'\r\nimport { LevelUpModal } from '../components/LevelUpModal'\r\n\r\ninterface Challenge {\r\n  type: 'body' | 'eye';\r\n  description: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n  level: number; \r\n  currentExperience: number \r\n  challengesCompleted: number;\r\n  experienceToNextLevel:number;\r\n  activeChallenge: Challenge;\r\n  levelUp: () => void;\r\n  startNewChallenge: () => void;\r\n  resetChallenge: () => void;\r\n  completeChallenge: () => void;\r\n  closeLevelUpModal: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n  children: ReactNode\r\n  level: number;\r\n  currentExperience: number;\r\n  challengesCompleted: number;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData)\r\n\r\nexport function ChallengesProvider({ children, ...rest }: ChallengesProviderProps) {\r\n  const [level, setLevel] = useState(rest.level)\r\n  const [currentExperience, setCurrentExperience] = useState(rest.currentExperience)\r\n  const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted)\r\n  const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false)\r\n  \r\n  const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n\r\n  useEffect(() => {\r\n    Notification.requestPermission()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    Cookies.set('level', String(level))\r\n    Cookies.set('currentExperience', String(currentExperience))\r\n    Cookies.set('challengesCompleted', String(challengesCompleted))\r\n  }, [level, currentExperience, challengesCompleted])\r\n\r\n  function levelUp() {\r\n    setLevel(level + 1)\r\n\r\n    setIsLevelUpModalOpen(true)\r\n  }\r\n\r\n  function closeLevelUpModal() {\r\n    setIsLevelUpModalOpen(false)\r\n  }\r\n\r\n  function startNewChallenge() {\r\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n    const challenge = challenges[randomChallengeIndex]\r\n\r\n    setActiveChallenge(challenge)\r\n\r\n    new Audio('/notification.mp3').play();\r\n\r\n    if(Notification.permission === 'granted') {\r\n      new Notification('Novo desafio ðŸŽ‰', { \r\n        body: `Valendo ${challenge.amount}xp!`\r\n      })\r\n    }\r\n  }\r\n\r\n  function resetChallenge() {\r\n    setActiveChallenge(null)\r\n  }\r\n\r\n  function completeChallenge() {\r\n    if(!activeChallenge) return;\r\n\r\n    const { amount } = activeChallenge;\r\n\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if(finalExperience >= experienceToNextLevel) {\r\n      finalExperience = finalExperience - experienceToNextLevel\r\n      levelUp()\r\n    }\r\n\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1)\r\n  }\r\n  \r\n  return (\r\n    <ChallengesContext.Provider value={{ \r\n      level, \r\n      currentExperience, \r\n      challengesCompleted, \r\n      activeChallenge,\r\n      experienceToNextLevel,\r\n      levelUp,\r\n      startNewChallenge,\r\n      resetChallenge,\r\n      completeChallenge,\r\n      closeLevelUpModal\r\n      }}\r\n    >\r\n      { children }\r\n      { isLevelUpModalOpen && <LevelUpModal />}\r\n    </ChallengesContext.Provider>\r\n  )\r\n\r\n}\r\n\r\n\r\n \r\n \r\n"]},"metadata":{},"sourceType":"module"}