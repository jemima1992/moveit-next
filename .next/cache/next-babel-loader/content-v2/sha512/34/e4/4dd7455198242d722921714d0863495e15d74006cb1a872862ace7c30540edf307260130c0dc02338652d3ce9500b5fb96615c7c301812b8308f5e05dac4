{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/JEMIMAFONSECAPASSOS/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\JEMIMAFONSECAPASSOS\\\\moveit-next\\\\src\\\\componentes\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var contextData = useContext(ChallengesContext);\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, \"0\").split(\" \"),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, \"0\").split(\" \"),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdowm() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        onClick: resetCountdowm,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_s(Countdown, \"URT48WzqkRfsJAlZWo79UeGNqsA=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/JEMIMAFONSECAPASSOS/moveit-next/src/componentes/Countdown.tsx"],"names":["useState","useEffect","useContext","ChallengesContext","styles","countdownTimeout","Countdown","contextData","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","resetCountdowm","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAC1B,MAAMC,WAAW,GAAGL,UAAU,CAACC,iBAAD,CAA9B;;AAD0B,kBAGFH,QAAQ,CAAC,MAAM,EAAP,CAHN;AAAA,MAGnBQ,IAHmB;AAAA,MAGbC,OAHa;;AAAA,mBAIMT,QAAQ,CAAC,KAAD,CAJd;AAAA,MAInBU,QAJmB;AAAA,MAITC,WAJS;;AAAA,mBAKYX,QAAQ,CAAC,KAAD,CALpB;AAAA,MAKnBY,WALmB;AAAA,MAKNC,cALM;;AAO1B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAR0B,8BAUQU,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,GAAvC,CAVR;AAAA;AAAA,MAUnBC,UAVmB;AAAA,MAUPC,WAVO;;AAAA,+BAWQJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,GAAvC,CAXR;AAAA;AAAA,MAWnBG,UAXmB;AAAA,MAWPC,WAXO;;AAa1B,WAASC,cAAT,GAA0B;AACxBd,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,WAASe,cAAT,GAAyB;AACvBC,IAAAA,YAAY,CAACtB,gBAAD,CAAZ;AACAM,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACD;;AAEDR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACxBH,MAAAA,gBAAgB,GAAGuB,UAAU,CAAC,YAAM;AAClCnB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,IAAI,CAAxB,EAA0B;AAC/BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GATQ,EASN,CAACD,QAAD,EAAWF,IAAX,CATM,CAAT;AAWA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACyB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOR;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGZ,WAAW,gBACV;AACA,MAAA,QAAQ,MADR;AAEA,MAAA,SAAS,EAAER,MAAM,CAAC0B,eAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAQV;AAAA,gBACIpB,QAAQ,gBACX;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,SAAS,YAAKN,MAAM,CAAC0B,eAAZ,cAA+B1B,MAAM,CAAC2B,qBAAtC,CAFV;AAGC,QAAA,OAAO,EAAEL,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,gBAQV;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAEtB,MAAM,CAAC0B,eAFlB;AAGA,QAAA,OAAO,EAAEL,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATF,qBArBJ;AAAA,kBADF;AA6CD;;GA/EenB,S;;KAAAA,S","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\r\nimport styles from \"../styles/components/Countdown.module.css\";\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n  const contextData = useContext(ChallengesContext)\r\n\r\n  const [time, setTime] = useState(0.1 * 60);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [hasFinished, setHasFinished] = useState(false);\r\n\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time % 60;\r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\" \");\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\" \");\r\n\r\n  function startCountdown() {\r\n    setIsActive(true);\r\n  }\r\n\r\n  function resetCountdowm(){\r\n    clearTimeout(countdownTimeout);\r\n    setIsActive(false);\r\n    setTime(0.1 * 60);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isActive && time > 0) {\r\n      countdownTimeout = setTimeout(() => {\r\n        setTime(time - 1);\r\n      }, 1000);\r\n    } else if (isActive && time == 0){\r\n      setHasFinished(true);\r\n      setIsActive(false);\r\n    }\r\n  }, [isActive, time]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.countdownContainer}>\r\n        <div>\r\n          <span>{minuteLeft}</span>\r\n          <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n          <span>{secondLeft}</span>\r\n          <span>{secondRight}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {hasFinished ? (\r\n        <button\r\n        disabled\r\n        className={styles.countdownButton}\r\n        >\r\n         Ciclo encerrado\r\n        </button>\r\n      ) : (\r\n        <>\r\n          { isActive ? (\r\n         <button\r\n          type=\"button\"\r\n          className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n          onClick={resetCountdowm}>\r\n           Abandonar ciclo\r\n          </button>\r\n      ) : (\r\n          <button\r\n          type=\"button\"\r\n          className={styles.countdownButton}\r\n          onClick={startCountdown}>\r\n          Iniciar um ciclo\r\n        </button>\r\n      )}\r\n     \r\n        </>\r\n      )}\r\n\r\n      \r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}