{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\JEMIMAFONSECAPASSOS\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ðŸŽ‰', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      activeChallenge: activeChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"POCod5lVJzLDZnxgMknXr3PjRHI=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/JEMIMAFONSECAPASSOS/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","levelUp","Notification","requestPermission","set","String","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react'\r\nimport Cookies from  'js-cookie'\r\nimport challenges from '../../challenges.json';\r\nimport { types } from 'util';\r\n\r\n\r\ninterface Challenge {\r\n  type: 'body' | 'eye';\r\n  description: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n  level: number; \r\n  currentExperience: number \r\n  challengesCompleted: number;\r\n  experienceToNextLevel:number;\r\n  activeChallenge: Challenge;\r\n  levelUp: () => void;\r\n  startNewChallenge: () => void;\r\n  resetChallenge: () => void;\r\n  completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData)\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n  const [level, setLevel] = useState(1)\r\n  const [currentExperience, setCurrentExperience] = useState(0)\r\n  const [challengesCompleted, setChallengesCompleted] = useState(0)\r\n  \r\n  const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n\r\n  function levelUp() {\r\n    setLevel(level + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    Notification.requestPermission();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Cookies.set('level', String(level));\r\n  }, [level, currentExperience, challengesCompleted]);\r\n\r\n  function startNewChallenge() {\r\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n    const challenge = challenges[randomChallengeIndex]\r\n\r\n    setActiveChallenge(challenge)\r\n\r\n    new Audio('/notification.mp3').play();\r\n\r\n    if (Notification.permission === 'granted'){\r\n      new Notification('Novo desafio ðŸŽ‰', { \r\n        body: `Valendo ${challenge.amount}xp!`\r\n      })\r\n  }\r\n}\r\n\r\n  function resetChallenge() {\r\n    setActiveChallenge(null)\r\n  }\r\n\r\n  function completeChallenge() {\r\n    if (!activeChallenge){\r\n      return;\r\n    }\r\n\r\n    const { amount } = activeChallenge;\r\n\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if (finalExperience >= experienceToNextLevel){\r\n        finalExperience = finalExperience - experienceToNextLevel;\r\n        levelUp();\r\n    }\r\n\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1);\r\n  }\r\n  \r\n  return (\r\n    <ChallengesContext.Provider value={{ \r\n      level, \r\n      currentExperience, \r\n      challengesCompleted, \r\n      activeChallenge,\r\n      experienceToNextLevel,\r\n      levelUp,\r\n      startNewChallenge,\r\n      resetChallenge,\r\n      completeChallenge\r\n      }}\r\n    >\r\n      { children }\r\n    </ChallengesContext.Provider>\r\n  )\r\n\r\n    }\r\n\r\n\r\n \r\n \r\n"]},"metadata":{},"sourceType":"module"}